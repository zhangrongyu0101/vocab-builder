/// <reference types="jest" />
import { Storage } from './jest-chrome';
/**
 * Namespace member data format from jest-chrome-schema.json
 *
 * @interface SchemaData
 * @template T Type of namespace member
 */
interface SchemaData<T extends 'event' | 'function' | 'property'> {
    name: string;
    type: T;
    deprecated: string | false;
    parameters: T extends 'event' | 'function' ? {
        name: string;
        optional: boolean;
        parameters: number;
        type: string;
    }[] : never[];
    value: T extends 'property' ? any : undefined;
}
export declare const addEvent: ({ name, parameters }: SchemaData<'event'>, target: any) => import("./create-event").CallableEvent<import("./create-event").EventCallback, import("./create-event").EventSelector<import("./create-event").EventCallback>>;
export declare const addFunction: ({ name }: SchemaData<'function'>, target: any) => jest.Mock<any, any>;
export declare const addProperty: ({ name, value }: SchemaData<'property'>, target: any) => any;
export declare function addStorageArea(): Storage.StorageArea;
export {};
